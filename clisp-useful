Useful lisp stuff:

quote or '
list
defun
defparameter
setf
let* and let
first
rest
length
cons
append
reverse
random

concatenate
subseq

format
print
prin1
princ

t
numberp
oddp
evenp
=, >, <,...
string=
listp
eq
null
if
progn

dolist
values
cond
defun
defmacro
macroexpand
multiple-value-bind
float

read
read-char
write
write-char

setq
aref
elt
#\C
string
type-of

make-hash-table
make-array

gethash

defpackage
in-package

open
close

(defun open-bracket-macro-character (stream char) `,(read-delimited-list \#] stream t))
(set-macro-character #\[ #'open-bracket-macro-character)
(set-macro-character #\] (get-macro-character #\)))
